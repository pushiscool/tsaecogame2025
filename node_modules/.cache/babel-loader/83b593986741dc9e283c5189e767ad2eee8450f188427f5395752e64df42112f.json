{"ast":null,"code":"var _jsxFileName = \"/Users/pushpakjain/myreact1/myreactapp1/src/tsaecorescue/src/components/HomeScreen.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport \"./HomeScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen() {\n  _s();\n  const [mountains, setMountains] = useState([]);\n  const [whiteCurrents, setWhiteCurrents] = useState([]);\n  const whiteCurrentId = useRef(0);\n  const whiteTimeoutRef = useRef(null);\n  const generateMountains = () => {\n    let leftPos = 0;\n    const arr = [];\n    while (leftPos < 300) {\n      const isFront = arr.length % 2 === 0;\n      const h = isFront ? Math.floor(Math.random() * 150) + 1750 : Math.floor(Math.random() * 150) + 2650;\n      const w = Math.floor(Math.random() * 200) + 1900;\n      const s = Math.random() * 3;\n      const l = leftPos + s;\n      arr.push({\n        height: h,\n        width: w,\n        left: `${l}%`,\n        isFront\n      });\n      leftPos = l + 9.5;\n    }\n    const mountainBefore = {\n      height: Math.floor(Math.random() * 150) + 1750,\n      width: Math.floor(Math.random() * 200) + 1900,\n      left: \"-5%\",\n      isFront: true\n    };\n    const mountainAfter = {\n      height: Math.floor(Math.random() * 150) + 1750,\n      width: Math.floor(Math.random() * 200) + 1900,\n      left: \"305%\",\n      isFront: false\n    };\n    arr.unshift(mountainBefore);\n    arr.push(mountainAfter);\n    return arr;\n  };\n  useEffect(() => {\n    setMountains(generateMountains());\n  }, []);\n\n  // Sun rays (unchanged)\n  const rayCount = 18;\n  const orbitRadius = 46;\n  const minRayLength = 20;\n  const maxRayLength = 25;\n  const rays = Array.from({\n    length: rayCount\n  }, (_, i) => {\n    const angle = i * (360 / rayCount);\n    const rayLength = Math.random() * (maxRayLength - minRayLength) + minRayLength;\n    const randomDelay = Math.random() * 8;\n    const randomDuration = Math.random() * 2 + 3;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sun-ray\",\n      style: {\n        width: `${rayLength}px`,\n        transform: `rotate(${angle}deg) translateX(${orbitRadius}px)`,\n        '--lineLength': `${rayLength}px`,\n        animation: `bounce ${randomDuration}s linear infinite`,\n        animationDelay: `${randomDelay}s`\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  });\n  function toggleFullscreen() {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n    }\n  }\n\n  // Generate a smooth, realistic wave path for the water's top curve.\n  // Baseline at y = 300 with 6 segments using cubic Bezier curves.\n  function generateWavePath(shift) {\n    const baseline = 300;\n    let d = `M0 ${baseline}`;\n    const segments = 6;\n    const segmentWidth = 1200 / segments;\n    for (let i = 0; i < segments; i++) {\n      const x0 = i * segmentWidth;\n      const x1 = x0 + segmentWidth / 3;\n      const x2 = x0 + 2 * segmentWidth / 3;\n      const x3 = (i + 1) * segmentWidth;\n      const amplitude = 20 * (i % 2 === 0 ? 1 : -1);\n      const cp1X = x1 + shift;\n      const cp2X = x2 + shift;\n      const cp1Y = baseline + amplitude;\n      const cp2Y = baseline + amplitude;\n      d += ` C ${cp1X.toFixed(1)} ${cp1Y.toFixed(1)}, ${cp2X.toFixed(1)} ${cp2Y.toFixed(1)}, ${x3} ${baseline}`;\n    }\n    d += ` L1200 800 L0 800 Z`;\n    return d;\n  }\n  const d1 = generateWavePath(0);\n  const randomShift = Math.random() * 30 + 20; // shift between 20 and 50\n  const d2 = generateWavePath(randomShift);\n\n  // Generates a short (~200px), curvy white current line.\n  // The baseline is provided (random within the water region).\n  function generateWhiteLinePath(baseline) {\n    const segmentWidth = 200 / 2; // 2 segments, ~100px each\n    const cp1X = Math.random() * segmentWidth;\n    const cp1Y = baseline + (Math.random() * 20 - 10);\n    const cp2X = segmentWidth + Math.random() * segmentWidth;\n    const cp2Y = baseline + (Math.random() * 20 - 10);\n    return `M0 ${baseline} Q ${cp1X.toFixed(1)} ${cp1Y.toFixed(1)} ${segmentWidth} ${baseline} Q ${cp2X.toFixed(1)} ${cp2Y.toFixed(1)} 200 ${baseline}`;\n  }\n\n  // Spawns a new white current line.\n  function spawnWhiteCurrent() {\n    const id = whiteCurrentId.current++;\n    // Random vertical position: between 600 and 700 (water top is 300, bottom is 800)\n    const baseline = Math.random() * 100 + 600;\n    const d = generateWhiteLinePath(baseline);\n    // Random duration between 4 and 10 seconds.\n    const duration = Math.random() * 6 + 4;\n    // If duration is 10 seconds or more, force lifetime to 10 seconds.\n    const lifetime = duration >= 10 ? 10000 : duration * 1000;\n    const newCurrent = {\n      id,\n      d,\n      duration\n    };\n    setWhiteCurrents(prev => [...prev, newCurrent]);\n    setTimeout(() => {\n      setWhiteCurrents(prev => prev.filter(current => current.id !== id));\n    }, lifetime);\n  }\n\n  // Schedule white current spawns at random intervals (every 2-5 seconds)\n  function scheduleNextWhiteCurrent() {\n    const delay = Math.random() * 3000 + 2000; // 2000 to 5000 ms\n    whiteTimeoutRef.current = setTimeout(() => {\n      spawnWhiteCurrent();\n      scheduleNextWhiteCurrent();\n    }, delay);\n  }\n  useEffect(() => {\n    scheduleNextWhiteCurrent();\n    return () => clearTimeout(whiteTimeoutRef.current);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"homescreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mountain-container\",\n      children: mountains.map((m, i) => {\n        const style = {\n          position: \"absolute\",\n          bottom: `-${m.height / 1.2}px`,\n          left: m.left,\n          width: `${m.width}px`,\n          height: `${m.height}px`,\n          background: `radial-gradient(circle at 50% 80%, #158b34 20%, #0f6f28 85%, #0b4d1e 100%)`,\n          boxShadow: `0 20px 50px rgba(0, 0, 0, 0.4), inset 0 -20px 30px rgba(0, 0, 0, 0.5)`,\n          borderRadius: \"50% 50% 20% 20%\",\n          border: \"8px solid rgba(0, 0, 0, 0.5)\",\n          zIndex: m.isFront ? 2 : 1\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brick-wall\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sun\",\n      children: rays\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fullscreen-icon\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hitbox\",\n        onClick: toggleFullscreen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"corner top-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"corner top-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"corner bottom-right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"corner bottom-left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"water\",\n      style: {\n        position: \"absolute\",\n        bottom: 0,\n        left: 0,\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"svg\", {\n        viewBox: \"0 0 1200 800\",\n        preserveAspectRatio: \"none\",\n        children: [/*#__PURE__*/_jsxDEV(\"path\", {\n          d: d1,\n          fill: \"#0af\",\n          fillOpacity: \"0.6\",\n          children: [/*#__PURE__*/_jsxDEV(\"animate\", {\n            attributeName: \"d\",\n            dur: \"5s\",\n            repeatCount: \"indefinite\",\n            values: `${d1};${d2};${d1}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"animateTransform\", {\n            attributeName: \"transform\",\n            type: \"translate\",\n            from: \"0 0\",\n            to: \"30 0\",\n            dur: \"5s\",\n            repeatCount: \"indefinite\",\n            additive: \"sum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), whiteCurrents.map(current => /*#__PURE__*/_jsxDEV(\"path\", {\n          d: current.d,\n          stroke: \"white\",\n          strokeWidth: \"1\",\n          fill: \"none\",\n          children: /*#__PURE__*/_jsxDEV(\"animateTransform\", {\n            attributeName: \"transform\",\n            type: \"translate\",\n            from: \"-200 0\",\n            to: \"1400 0\",\n            dur: `${current.duration}s`,\n            fill: \"freeze\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this)\n        }, current.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(HomeScreen, \"6j31hoQsMg51FrsQ4NY9NT+9xZI=\");\n_c = HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","HomeScreen","_s","mountains","setMountains","whiteCurrents","setWhiteCurrents","whiteCurrentId","whiteTimeoutRef","generateMountains","leftPos","arr","isFront","length","h","Math","floor","random","w","s","l","push","height","width","left","mountainBefore","mountainAfter","unshift","rayCount","orbitRadius","minRayLength","maxRayLength","rays","Array","from","_","i","angle","rayLength","randomDelay","randomDuration","className","style","transform","animation","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","toggleFullscreen","document","fullscreenElement","documentElement","requestFullscreen","exitFullscreen","generateWavePath","shift","baseline","d","segments","segmentWidth","x0","x1","x2","x3","amplitude","cp1X","cp2X","cp1Y","cp2Y","toFixed","d1","randomShift","d2","generateWhiteLinePath","spawnWhiteCurrent","id","current","duration","lifetime","newCurrent","prev","setTimeout","filter","scheduleNextWhiteCurrent","delay","clearTimeout","children","map","m","position","bottom","background","boxShadow","borderRadius","border","zIndex","onClick","viewBox","preserveAspectRatio","fill","fillOpacity","attributeName","dur","repeatCount","values","type","to","additive","stroke","strokeWidth","_c","$RefreshReg$"],"sources":["/Users/pushpakjain/myreact1/myreactapp1/src/tsaecorescue/src/components/HomeScreen.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport \"./HomeScreen.css\";\n\nexport default function HomeScreen() {\n  const [mountains, setMountains] = useState([]);\n  const [whiteCurrents, setWhiteCurrents] = useState([]);\n  const whiteCurrentId = useRef(0);\n  const whiteTimeoutRef = useRef(null);\n\n  const generateMountains = () => {\n    let leftPos = 0;\n    const arr = [];\n    while (leftPos < 300) {\n      const isFront = arr.length % 2 === 0;\n      const h = isFront \n        ? Math.floor(Math.random() * 150) + 1750 \n        : Math.floor(Math.random() * 150) + 2650;\n      const w = Math.floor(Math.random() * 200) + 1900;\n      const s = Math.random() * 3;\n      const l = leftPos + s;\n      arr.push({ height: h, width: w, left: `${l}%`, isFront });\n      leftPos = l + 9.5;\n    }\n    const mountainBefore = {\n      height: Math.floor(Math.random() * 150) + 1750,\n      width: Math.floor(Math.random() * 200) + 1900,\n      left: \"-5%\",\n      isFront: true\n    };\n    const mountainAfter = {\n      height: Math.floor(Math.random() * 150) + 1750,\n      width: Math.floor(Math.random() * 200) + 1900,\n      left: \"305%\",\n      isFront: false\n    };\n    arr.unshift(mountainBefore);\n    arr.push(mountainAfter);\n    return arr;\n  };\n\n  useEffect(() => {\n    setMountains(generateMountains());\n  }, []);\n\n  // Sun rays (unchanged)\n  const rayCount = 18;\n  const orbitRadius = 46;\n  const minRayLength = 20;\n  const maxRayLength = 25;\n  const rays = Array.from({ length: rayCount }, (_, i) => {\n    const angle = i * (360 / rayCount);\n    const rayLength = Math.random() * (maxRayLength - minRayLength) + minRayLength;\n    const randomDelay = Math.random() * 8;\n    const randomDuration = Math.random() * 2 + 3;\n    return (\n      <div\n        key={i}\n        className=\"sun-ray\"\n        style={{\n          width: `${rayLength}px`,\n          transform: `rotate(${angle}deg) translateX(${orbitRadius}px)`,\n          '--lineLength': `${rayLength}px`,\n          animation: `bounce ${randomDuration}s linear infinite`,\n          animationDelay: `${randomDelay}s`\n        }}\n      />\n    );\n  });\n\n  function toggleFullscreen() {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n    } else if (document.exitFullscreen) {\n      document.exitFullscreen();\n    }\n  }\n\n  // Generate a smooth, realistic wave path for the water's top curve.\n  // Baseline at y = 300 with 6 segments using cubic Bezier curves.\n  function generateWavePath(shift) {\n    const baseline = 300;\n    let d = `M0 ${baseline}`;\n    const segments = 6;\n    const segmentWidth = 1200 / segments;\n    for (let i = 0; i < segments; i++) {\n      const x0 = i * segmentWidth;\n      const x1 = x0 + segmentWidth / 3;\n      const x2 = x0 + (2 * segmentWidth) / 3;\n      const x3 = (i + 1) * segmentWidth;\n      const amplitude = 20 * (i % 2 === 0 ? 1 : -1);\n      const cp1X = x1 + shift;\n      const cp2X = x2 + shift;\n      const cp1Y = baseline + amplitude;\n      const cp2Y = baseline + amplitude;\n      d += ` C ${cp1X.toFixed(1)} ${cp1Y.toFixed(1)}, ${cp2X.toFixed(1)} ${cp2Y.toFixed(1)}, ${x3} ${baseline}`;\n    }\n    d += ` L1200 800 L0 800 Z`;\n    return d;\n  }\n\n  const d1 = generateWavePath(0);\n  const randomShift = Math.random() * 30 + 20; // shift between 20 and 50\n  const d2 = generateWavePath(randomShift);\n\n  // Generates a short (~200px), curvy white current line.\n  // The baseline is provided (random within the water region).\n  function generateWhiteLinePath(baseline) {\n    const segmentWidth = 200 / 2; // 2 segments, ~100px each\n    const cp1X = Math.random() * segmentWidth;\n    const cp1Y = baseline + (Math.random() * 20 - 10);\n    const cp2X = segmentWidth + Math.random() * segmentWidth;\n    const cp2Y = baseline + (Math.random() * 20 - 10);\n    return `M0 ${baseline} Q ${cp1X.toFixed(1)} ${cp1Y.toFixed(1)} ${segmentWidth} ${baseline} Q ${cp2X.toFixed(1)} ${cp2Y.toFixed(1)} 200 ${baseline}`;\n  }\n\n  // Spawns a new white current line.\n  function spawnWhiteCurrent() {\n    const id = whiteCurrentId.current++;\n    // Random vertical position: between 600 and 700 (water top is 300, bottom is 800)\n    const baseline = Math.random() * 100 + 600;\n    const d = generateWhiteLinePath(baseline);\n    // Random duration between 4 and 10 seconds.\n    const duration = Math.random() * 6 + 4; \n    // If duration is 10 seconds or more, force lifetime to 10 seconds.\n    const lifetime = duration >= 10 ? 10000 : duration * 1000;\n    const newCurrent = { id, d, duration };\n    setWhiteCurrents(prev => [...prev, newCurrent]);\n    setTimeout(() => {\n      setWhiteCurrents(prev => prev.filter(current => current.id !== id));\n    }, lifetime);\n  }\n\n  // Schedule white current spawns at random intervals (every 2-5 seconds)\n  function scheduleNextWhiteCurrent() {\n    const delay = Math.random() * 3000 + 2000; // 2000 to 5000 ms\n    whiteTimeoutRef.current = setTimeout(() => {\n      spawnWhiteCurrent();\n      scheduleNextWhiteCurrent();\n    }, delay);\n  }\n\n  useEffect(() => {\n    scheduleNextWhiteCurrent();\n    return () => clearTimeout(whiteTimeoutRef.current);\n  }, []);\n\n  return (\n    <div id=\"homescreen\">\n      <div className=\"mountain-container\">\n        {mountains.map((m, i) => {\n          const style = {\n            position: \"absolute\",\n            bottom: `-${m.height / 1.2}px`,\n            left: m.left,\n            width: `${m.width}px`,\n            height: `${m.height}px`,\n            background: `radial-gradient(circle at 50% 80%, #158b34 20%, #0f6f28 85%, #0b4d1e 100%)`,\n            boxShadow: `0 20px 50px rgba(0, 0, 0, 0.4), inset 0 -20px 30px rgba(0, 0, 0, 0.5)`,\n            borderRadius: \"50% 50% 20% 20%\",\n            border: \"8px solid rgba(0, 0, 0, 0.5)\",\n            zIndex: m.isFront ? 2 : 1\n          };\n          return <div key={i} style={style} />;\n        })}\n      </div>\n      <div className=\"brick-wall\"></div>\n      <div className=\"sun\">\n        {rays}\n      </div>\n      <div className=\"fullscreen-icon\">\n        <div className=\"hitbox\" onClick={toggleFullscreen}></div>\n        <div className=\"corner top-left\"></div>\n        <div className=\"corner top-right\"></div>\n        <div className=\"corner bottom-right\"></div>\n        <div className=\"corner bottom-left\"></div>\n      </div>\n      {/* Fixed water container at the bottom */}\n      <div className=\"water\" style={{ position: \"absolute\", bottom: 0, left: 0, width: \"100%\" }}>\n        <svg viewBox=\"0 0 1200 800\" preserveAspectRatio=\"none\">\n          <path d={d1} fill=\"#0af\" fillOpacity=\"0.6\">\n            {/* Animate the top wave's shape */}\n            <animate \n              attributeName=\"d\" \n              dur=\"5s\" \n              repeatCount=\"indefinite\" \n              values={`${d1};${d2};${d1}`} \n            />\n            {/* Subtle horizontal translation */}\n            <animateTransform \n              attributeName=\"transform\" \n              type=\"translate\" \n              from=\"0 0\" \n              to=\"30 0\" \n              dur=\"5s\" \n              repeatCount=\"indefinite\" \n              additive=\"sum\" \n            />\n          </path>\n          {/* Render white current lines */}\n          {whiteCurrents.map(current => (\n            <path key={current.id} d={current.d} stroke=\"white\" strokeWidth=\"1\" fill=\"none\">\n              <animateTransform \n                attributeName=\"transform\" \n                type=\"translate\" \n                from=\"-200 0\" \n                to=\"1400 0\" \n                dur={`${current.duration}s`} \n                fill=\"freeze\" \n              />\n            </path>\n          ))}\n        </svg>\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}