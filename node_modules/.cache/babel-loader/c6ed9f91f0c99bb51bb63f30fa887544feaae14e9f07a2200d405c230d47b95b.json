{"ast":null,"code":"var _jsxFileName = \"/Users/pushpakjain/myreact1/myreactapp1/src/tsaecorescue/src/components/HomeScreen.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport \"./HomeScreen.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function HomeScreen() {\n  _s();\n  const [mountains, setMountains] = useState([]);\n  useEffect(() => {\n    let leftPos = 0;\n    const arr = [];\n    while (leftPos < 300) {\n      const isFront = arr.length % 2 === 0;\n      const h = isFront ? Math.floor(Math.random() * 150) + 1400 : Math.floor(Math.random() * 150) + 2100;\n      const w = Math.floor(Math.random() * 200) + 1450;\n      const s = Math.random() * 2;\n      const l = leftPos + s;\n      arr.push({\n        height: h,\n        width: w,\n        left: `${l}%`,\n        isFront\n      });\n      leftPos = l + 9.5;\n    }\n    setMountains(arr);\n  }, []);\n  function startGame() {\n    console.log(\"test\");\n  }\n  const rayCount = 12;\n  const minLength = 40;\n  const maxLength = 100;\n  // Calculate a random effective length for each ray,\n  // then adjust based on its side (left rays are half as long, right rays doubled)\n  const rays = Array.from({\n    length: rayCount\n  }, (_, i) => {\n    const angle = i * (360 / rayCount);\n    const rad = angle * (Math.PI / 180);\n    const sideFactor = Math.cos(rad) < 0 ? 0.5 : 2;\n    const randomLength = Math.random() * (maxLength - minLength) + minLength;\n    const effectiveLength = randomLength * sideFactor;\n    // Alternating delay: ensures adjacent rays do not animate simultaneously\n    const delay = i % 2 === 0 ? 0.2 : 0.4;\n\n    // New nested structure for in/out animation:\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sun-ray-container\",\n      style: {\n        transform: `rotate(${angle}deg)`\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sun-ray-base\",\n        style: {\n          transform: `translateX(80px)`\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sun-ray\",\n          style: {\n            width: `${effectiveLength}px`,\n            animationDelay: `${delay}s`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"homescreen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startGame,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mountain-container\",\n      children: mountains.map((m, i) => {\n        const style = {\n          position: \"absolute\",\n          bottom: `-${m.height / 1.2}px`,\n          left: m.left,\n          width: `${m.width}px`,\n          height: `${m.height}px`,\n          background: `\n              radial-gradient(\n                circle at 50% 80%,\n                #158b34 20%,\n                #0f6f28 85%,\n                #0b4d1e 100%\n              )\n            `,\n          boxShadow: `\n              0 20px 50px rgba(0, 0, 0, 0.4),\n              inset 0 -20px 30px rgba(0, 0, 0, 0.5)\n            `,\n          borderRadius: \"50% 50% 20% 20%\",\n          border: \"8px solid rgba(0, 0, 0, 0.5)\",\n          zIndex: m.isFront ? 2 : -1\n        };\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: style\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sun\",\n      children: rays\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(HomeScreen, \"CHcp/4TCV1EdB582rkEZIgVxOJ8=\");\n_c = HomeScreen;\nvar _c;\n$RefreshReg$(_c, \"HomeScreen\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HomeScreen","_s","mountains","setMountains","leftPos","arr","isFront","length","h","Math","floor","random","w","s","l","push","height","width","left","startGame","console","log","rayCount","minLength","maxLength","rays","Array","from","_","i","angle","rad","PI","sideFactor","cos","randomLength","effectiveLength","delay","className","style","transform","children","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","map","m","position","bottom","background","boxShadow","borderRadius","border","zIndex","_c","$RefreshReg$"],"sources":["/Users/pushpakjain/myreact1/myreactapp1/src/tsaecorescue/src/components/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport \"./HomeScreen.css\";\n\nexport default function HomeScreen() {\n  const [mountains, setMountains] = useState([]);\n\n  useEffect(() => {\n    let leftPos = 0;\n    const arr = [];\n    while (leftPos < 300) {\n      const isFront = arr.length % 2 === 0;\n      const h = isFront \n                ? Math.floor(Math.random() * 150) + 1400 \n                : Math.floor(Math.random() * 150) + 2100;\n      const w = Math.floor(Math.random() * 200) + 1450;\n      const s = Math.random() * 2;\n      const l = leftPos + s;\n      arr.push({ height: h, width: w, left: `${l}%`, isFront });\n      leftPos = l + 9.5;\n    }\n    setMountains(arr);\n  }, []);\n\n  function startGame() {\n    console.log(\"test\");\n  }\n\n  const rayCount = 12;\n  const minLength = 40;\n  const maxLength = 100;\n  // Calculate a random effective length for each ray,\n  // then adjust based on its side (left rays are half as long, right rays doubled)\n  const rays = Array.from({ length: rayCount }, (_, i) => {\n    const angle = i * (360 / rayCount);\n    const rad = angle * (Math.PI / 180);\n    const sideFactor = Math.cos(rad) < 0 ? 0.5 : 2;\n    const randomLength = Math.random() * (maxLength - minLength) + minLength;\n    const effectiveLength = randomLength * sideFactor;\n    // Alternating delay: ensures adjacent rays do not animate simultaneously\n    const delay = i % 2 === 0 ? 0.2 : 0.4;\n    \n    // New nested structure for in/out animation:\n    return (\n      <div\n        key={i}\n        className=\"sun-ray-container\"\n        style={{ transform: `rotate(${angle}deg)` }}\n      >\n        <div className=\"sun-ray-base\" style={{ transform: `translateX(80px)` }}>\n          <div\n            className=\"sun-ray\"\n            style={{\n              width: `${effectiveLength}px`,\n              animationDelay: `${delay}s`\n            }}\n          />\n        </div>\n      </div>\n    );\n  });\n\n  return (\n    <div id=\"homescreen\">\n      <h1>Game</h1>\n      <button onClick={startGame}>Start</button>\n      \n      <div className=\"mountain-container\">\n        {mountains.map((m, i) => {\n          const style = {\n            position: \"absolute\",\n            bottom: `-${m.height / 1.2}px`,\n            left: m.left,\n            width: `${m.width}px`,\n            height: `${m.height}px`,\n            background: `\n              radial-gradient(\n                circle at 50% 80%,\n                #158b34 20%,\n                #0f6f28 85%,\n                #0b4d1e 100%\n              )\n            `,\n            boxShadow: `\n              0 20px 50px rgba(0, 0, 0, 0.4),\n              inset 0 -20px 30px rgba(0, 0, 0, 0.5)\n            `,\n            borderRadius: \"50% 50% 20% 20%\",\n            border: \"8px solid rgba(0, 0, 0, 0.5)\",\n            zIndex: m.isFront ? 2 : -1,\n          };\n          return <div key={i} style={style} />;\n        })}\n      </div>\n      \n      <div className=\"sun\">\n        {rays}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}